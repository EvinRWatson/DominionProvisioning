@model IEnumerable<Dominion.Models.Inventory>
@using Dominion.Models
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Index";

    //User object: required anytime you need to access current users properties
    var user = (ApplicationUser) UserManager.Users.Where(u => u.UserName.Equals(UserManager.GetUserName(User))).Single();
}

<h1>Inventory</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Add Item</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.StockID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ItemName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrgID)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
    if(user.OrgID == item.OrgID || user.UserName == "Admin")
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.StockID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ItemName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrgID)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.StockID" class="btn btn-primary">Details</a> |
                <a asp-action="Edit" asp-route-id="@item.StockID" class="btn btn-warning">Edit</a> |
                <a asp-action="Delete" asp-route-id="@item.StockID" class="btn btn-danger">Delete</a>
            </td>
        </tr>
    }
}
    </tbody>
</table>
